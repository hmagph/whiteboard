# -*- mode: ruby -*-
# vi: set ft=ruby :
 
# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
 
$script = <<SCRIPT
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
echo 'deb http://get.docker.io/ubuntu docker main' > \
    /etc/apt/sources.list.d/docker.list
apt-get update -q
apt-get install -q -y --force-yes lxc-docker curl
usermod -a -G docker vagrant
sudo echo 'DOCKER_OPTS="-r=true -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock ${DOCKER_OPTS}"' > /etc/default/docker
sudo service docker restart
apt-get -qq install python-pip

SCRIPT

Vagrant::Config.run do |config|
  config.vm.customize ["modifyvm", :id, "--memory", 2048]
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu/trusty64"
 
  config.vm.provision :shell, :inline => $script
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.network "private_network", type: "dhcp"
  #Add or remove ports here as needed
  config.vm.network "forwarded_port", guest: 3000, host_ip: '127.0.0.1', host: 3000 #My python App Port
  config.vm.network "forwarded_port", guest: 8000, host_ip: '127.0.0.1', host: 8000 #My matisse App Port
  config.vm.network "forwarded_port", guest: 5000, host_ip: '127.0.0.1', host: 5002 #My python App Port
  config.vm.network "forwarded_port", guest: 8080, host_ip: '127.0.0.1', host: 8060 #My Jenkins Port
  config.vm.network "forwarded_port", guest: 8081, host_ip: '127.0.0.1', host: 8061 #ccs test
  config.vm.network "forwarded_port", guest: 27017, host_ip: '127.0.0.1', host: 27037 #Mongo Default Port
end
